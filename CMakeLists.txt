cmake_minimum_required(VERSION 3.16)
project(PortableEngine)
set(CXX_STANDARD "17")
if (UNIX)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
endif(UNIX)
file(GLOB mainSrc "PortableEngine/Main.cpp")
include_directories("PE_Core/")
add_subdirectory("PE_Core/")
include_directories("PE_OpenGL/")
add_subdirectory("PE_OpenGL/")
if (UNIX)
include_directories("PE_Linux/")
file(GLOB linuxSrc "PE_Linux/*.cpp")
else()
file(GLOB linuxSrc "")
endif(UNIX)
add_compile_definitions(XR_USE_GRAPHICS_API_OPENGL)
if (WIN32)
add_subdirectory("./PE_Win32")
add_subdirectory("./PE_DX11")
add_subdirectory("./PE_XR")
include_directories("./PE_Win32" "PE_DX11" "PE_XR")
# target_link_libraries(PE_Win32 PRIVATE PE_Core)
endif(WIN32)
add_executable(PortableEngine ${mainSrc})
target_link_libraries(PortableEngine PRIVATE PE_Core PE_OpenGL)
find_package(glm CONFIG REQUIRED)
find_package(EnTT CONFIG REQUIRED)
find_package(assimp CONFIG REQUIRED)
find_package(imgui CONFIG REQUIRED)
find_package(GLEW REQUIRED)
target_link_libraries(PortableEngine PRIVATE GLEW::GLEW)
target_link_libraries(PortableEngine PRIVATE glm::glm)
target_link_libraries(PortableEngine PRIVATE EnTT::EnTT)
target_link_libraries(PortableEngine PRIVATE assimp::assimp)
target_link_libraries(PortableEngine PRIVATE imgui::imgui)
if(UNIX)
find_package(X11 REQUIRED)
find_package(SDL2 CONFIG REQUIRED)
target_link_libraries(PortableEngine PRIVATE X11)
target_link_libraries(PortableEngine PRIVATE SDL2::SDL2 SDL2::SDL2main SDL2::SDL2-static)
endif(UNIX)
target_link_libraries(PortableEngine PRIVATE PE_Win32 PE_DX11 PE_XR)
if(WIN32)
find_package(openxr CONFIG REQUIRED)
target_link_libraries(PortableEngine PRIVATE OpenXR::headers OpenXR::openxr_loader)
find_package(directxtk CONFIG REQUIRED)
target_link_libraries(PortableEngine PRIVATE Microsoft::DirectXTK)
file(COPY "Assets/" DESTINATION "../Assets")
file(COPY "Shaders/" DESTINATION "../Shaders")
endif(WIN32)
set_property(GLOBAL PROPERTY CXX_STANDARD 17)